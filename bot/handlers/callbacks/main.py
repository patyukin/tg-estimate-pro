"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
"""
import logging
from datetime import datetime

from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

from bot.keyboards.inline import get_main_keyboard, get_back_keyboard
from bot.utils.decorators import error_handler
from bot.utils.helpers import format_stats_block

logger = logging.getLogger(__name__)
router = Router()


@router.callback_query(F.data == "main_menu")
@error_handler
async def callback_main_menu(callback: CallbackQuery, **kwargs):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    welcome_text = f"""
üèóÔ∏è <b>EstimatePro</b>

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <b>{callback.from_user.first_name}</b>! üëã

üéØ <b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>"""
    
    await callback.message.edit_text(
        welcome_text,
        parse_mode="HTML",
        reply_markup=get_main_keyboard()
    )


@router.callback_query(F.data == "user_stats")
@error_handler
async def callback_user_stats(callback: CallbackQuery, user_id: int, db, **kwargs):
    """–ü–æ–∫–∞–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    estimates = await db.get_user_estimates(user_id)
    templates = await db.get_user_templates(user_id)
    
    stats_text = format_stats_block(estimates, templates)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ø —à–∞–±–ª–æ–Ω—ã
    if templates:
        top_templates = sorted(templates, key=lambda x: x.get('usage_count', 0), reverse=True)[:3]
        stats_text += "\n\nüèÜ <b>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã:</b>\n"
        for i, template in enumerate(top_templates, 1):
            stats_text += f"‚î£ {i}. {template['name'][:20]} ({template.get('usage_count', 0)} –∏—Å–ø.)\n"
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="user_stats")],
        [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])
    
    await callback.message.edit_text(
        stats_text,
        parse_mode="HTML",
        reply_markup=keyboard
    )


@router.callback_query(F.data == "settings")
@error_handler
async def callback_settings(callback: CallbackQuery, config, **kwargs):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞"""
    settings_text = f"""
‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞</b>

üîß <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏:</b>

‚î£ ü§ñ –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫: {"‚úÖ –í–∫–ª—é—á–µ–Ω" if config.is_ai_available else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω"}
‚î£ üìä –í–∞–ª—é—Ç–∞: ‚ÇΩ (–†—É–±–ª–∏)  
‚î£ ‚è±Ô∏è –§–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏: –ß–∞—Å—ã
‚îó üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {datetime.now().strftime("%d.%m.%Y")}

üí° <b>–°–æ–≤–µ—Ç—ã:</b>
‚Ä¢ –°–æ–∑–¥–∞–≤–∞–π—Ç–µ —à–∞–±–ª–æ–Ω—ã –¥–ª—è —á–∞—Å—Ç—ã—Ö —Ä–∞–±–æ—Ç
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ò–ò –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–º–µ—Ç
‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ –æ—Ç—á–µ—Ç—ã
‚Ä¢ –°–ª–µ–¥–∏—Ç–µ –∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –ø—Ä–æ–µ–∫—Ç–æ–≤
"""
    
    await callback.message.edit_text(
        settings_text,
        parse_mode="HTML",
        reply_markup=get_back_keyboard()
    )


@router.callback_query(F.data == "help")
@error_handler
async def callback_help(callback: CallbackQuery, **kwargs):
    """–ü–æ–∫–∞–∑ —Å–ø—Ä–∞–≤–∫–∏"""
    help_text = """
üÜò <b>–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é EstimatePro</b>

<b>üìù –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>
‚Ä¢ <b>–°–º–µ—Ç—ã</b> - —Å–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–º–µ—Ç–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤
‚Ä¢ <b>–®–∞–±–ª–æ–Ω—ã</b> - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ä–∞–±–æ—Ç
‚Ä¢ <b>–ò–ò-–ø–æ–º–æ—â–Ω–∏–∫</b> - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–º–µ—Ç
‚Ä¢ <b>–û—Ç—á–µ—Ç—ã</b> - —ç–∫—Å–ø–æ—Ä—Ç –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö

<b>üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:</b>
1. –ù–∞–∂–º–∏—Ç–µ "üìù –ù–æ–≤–∞—è —Å–º–µ—Ç–∞"
2. –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
3. –î–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
4. –î–æ–±–∞–≤–ª—è–π—Ç–µ –ø–æ–∑–∏—Ü–∏–∏ —Ä–∞–±–æ—Ç
5. –ì–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ –æ—Ç—á–µ—Ç

<b>üí° –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã:</b>
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —à–∞–±–ª–æ–Ω—ã –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
‚Ä¢ –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ–º–æ–∂–µ—Ç –æ—Ü–µ–Ω–∏—Ç—å —Å–ª–æ–∂–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã
‚Ä¢ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
‚Ä¢ –ú–æ–∂–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–º–µ—Ç—ã –≤ PDF

<b>üîß –®–∞–±–ª–æ–Ω—ã —Ä–∞–±–æ—Ç:</b>
–°–æ–∑–¥–∞–≤–∞–π—Ç–µ —à–∞–±–ª–æ–Ω—ã –¥–ª—è –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è –∑–∞–¥–∞—á:
Frontend, Backend, DevOps, Design –∏ –¥—Ä.

<b>ü§ñ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç:</b>
–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø, –∏ –ø–æ–ª—É—á–∏—Ç–µ
–≥–æ—Ç–æ–≤—É—é —Å–º–µ—Ç—É —Å —Ä–∞–∑–±–∏–≤–∫–æ–π –ø–æ –∑–∞–¥–∞—á–∞–º.

<b>‚ùì –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</b>
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
"""
    
    await callback.message.edit_text(
        help_text,
        parse_mode="HTML",
        reply_markup=get_back_keyboard()
    ) 